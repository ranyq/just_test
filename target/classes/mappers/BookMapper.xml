<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookHouse.dao.BookMapper">
  <resultMap id="BaseResultMap" type="com.bookHouse.domain.Book">
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="publishing_house" jdbcType="VARCHAR" property="publishingHouse" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="translator" jdbcType="VARCHAR" property="translator" />
    <result column="cover_address" jdbcType="VARCHAR" property="coverAddress" />
    <result column="book_address" jdbcType="VARCHAR" property="bookAddress" />
    <result column="book_brief" jdbcType="VARCHAR" property="bookBrief" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="read_count" jdbcType="INTEGER" property="readCount" />
    <result column="collect_count" jdbcType="INTEGER" property="collectCount" />
    <result column="dr" jdbcType="INTEGER" property="dr" />
    <result column="parent_category_id" jdbcType="INTEGER" property="parentCategoryId" />
    <result column="download_amount" jdbcType="INTEGER" property="downloadAmount" />
    <result column="collect_amount" jdbcType="INTEGER" property="collectAmount" />
  </resultMap>
  <sql id="Base_Column_List">
    book_id, book_name, author, publishing_house, nation, translator, cover_address, 
    book_address, book_brief, create_time, category_id, class_name, read_count, collect_count, 
    dr, parent_category_id, download_amount, collect_amount
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bookHouse.domain.Book">
    insert into book (book_id, book_name, author, 
      publishing_house, nation, translator, 
      cover_address, book_address, book_brief, 
      create_time, category_id, class_name, 
      read_count, collect_count, dr, 
      parent_category_id, download_amount, collect_amount
      )
    values (#{bookId,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{publishingHouse,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, #{translator,jdbcType=VARCHAR}, 
      #{coverAddress,jdbcType=VARCHAR}, #{bookAddress,jdbcType=VARCHAR}, #{bookBrief,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{categoryId,jdbcType=INTEGER}, #{className,jdbcType=VARCHAR}, 
      #{readCount,jdbcType=INTEGER}, #{collectCount,jdbcType=INTEGER}, #{dr,jdbcType=INTEGER}, 
      #{parentCategoryId,jdbcType=INTEGER}, #{downloadAmount,jdbcType=INTEGER}, #{collectAmount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bookHouse.domain.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="publishingHouse != null">
        publishing_house,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="translator != null">
        translator,
      </if>
      <if test="coverAddress != null">
        cover_address,
      </if>
      <if test="bookAddress != null">
        book_address,
      </if>
      <if test="bookBrief != null">
        book_brief,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="className != null">
        class_name,
      </if>
      <if test="readCount != null">
        read_count,
      </if>
      <if test="collectCount != null">
        collect_count,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="parentCategoryId != null">
        parent_category_id,
      </if>
      <if test="downloadAmount != null">
        download_amount,
      </if>
      <if test="collectAmount != null">
        collect_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="publishingHouse != null">
        #{publishingHouse,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="translator != null">
        #{translator,jdbcType=VARCHAR},
      </if>
      <if test="coverAddress != null">
        #{coverAddress,jdbcType=VARCHAR},
      </if>
      <if test="bookAddress != null">
        #{bookAddress,jdbcType=VARCHAR},
      </if>
      <if test="bookBrief != null">
        #{bookBrief,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="readCount != null">
        #{readCount,jdbcType=INTEGER},
      </if>
      <if test="collectCount != null">
        #{collectCount,jdbcType=INTEGER},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=INTEGER},
      </if>
      <if test="parentCategoryId != null">
        #{parentCategoryId,jdbcType=INTEGER},
      </if>
      <if test="downloadAmount != null">
        #{downloadAmount,jdbcType=INTEGER},
      </if>
      <if test="collectAmount != null">
        #{collectAmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bookHouse.domain.Book">
    update book
    <set>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publishingHouse != null">
        publishing_house = #{publishingHouse,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="translator != null">
        translator = #{translator,jdbcType=VARCHAR},
      </if>
      <if test="coverAddress != null">
        cover_address = #{coverAddress,jdbcType=VARCHAR},
      </if>
      <if test="bookAddress != null">
        book_address = #{bookAddress,jdbcType=VARCHAR},
      </if>
      <if test="bookBrief != null">
        book_brief = #{bookBrief,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="readCount != null">
        read_count = #{readCount,jdbcType=INTEGER},
      </if>
      <if test="collectCount != null">
        collect_count = #{collectCount,jdbcType=INTEGER},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=INTEGER},
      </if>
      <if test="parentCategoryId != null">
        parent_category_id = #{parentCategoryId,jdbcType=INTEGER},
      </if>
      <if test="downloadAmount != null">
        download_amount = #{downloadAmount,jdbcType=INTEGER},
      </if>
      <if test="collectAmount != null">
        collect_amount = #{collectAmount,jdbcType=INTEGER},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bookHouse.domain.Book">
    update book
    set book_name = #{bookName,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publishing_house = #{publishingHouse,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      translator = #{translator,jdbcType=VARCHAR},
      cover_address = #{coverAddress,jdbcType=VARCHAR},
      book_address = #{bookAddress,jdbcType=VARCHAR},
      book_brief = #{bookBrief,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      category_id = #{categoryId,jdbcType=INTEGER},
      class_name = #{className,jdbcType=VARCHAR},
      read_count = #{readCount,jdbcType=INTEGER},
      collect_count = #{collectCount,jdbcType=INTEGER},
      dr = #{dr,jdbcType=INTEGER},
      parent_category_id = #{parentCategoryId,jdbcType=INTEGER},
      download_amount = #{downloadAmount,jdbcType=INTEGER},
      collect_amount = #{collectAmount,jdbcType=INTEGER}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <select id="selectAllBooks" resultMap="BaseResultMap">
    select * from book where dr=0
  </select>

  <select id="selectByConditionWithPage" resultMap="BaseResultMap">
  SELECT * FROM book
  where 1=1
  <if test="keyword!=null">
    and book_name like concat('%',#{keyword},'%') or author like concat('%',#{keyword},'%')
  </if>
    <if test="categoryid!=null">
      and (category_id=${categoryid} or parent_category_id=${categoryid})
    </if>
  and dr=0
  limit #{start},#{limit}
</select>

  <select id="selectOrderByCreatetime" resultMap="BaseResultMap">
    SELECT * FROM book where
    dr=0 ORDER BY create_time
    limit #{start},#{amount}
  </select>

  <select id="selectOrderByDownload" resultMap="BaseResultMap">
    SELECT * FROM book where
    dr=0 ORDER BY download_amount
    limit #{start},#{amount}
  </select>

  <select id="selectById" resultMap="BaseResultMap">
    SELECT * FROM book where
    id in
    <foreach collection="idlist" open="(" close=")" separator="," item="id">
      ${id}
    </foreach>
    and dr=0
  </select>
  <update id="logicalDeleteBookById">
    update book set dr=1 where dr=0 and book_id=id
  </update>

</mapper>