<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bookHouse.dao.EvaluationMapper" >
  <resultMap id="BaseResultMap" type="com.bookHouse.domain.Evaluation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="bookid" property="bookid" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="evaluate" property="evaluate" jdbcType="VARCHAR" />
    <result column="dr" property="dr" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, level, user_id, bookid, user_name, book_name, evaluate, dr
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from evaluation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from evaluation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bookHouse.domain.Evaluation" >
    insert into evaluation (id, level, user_id, 
      bookid, user_name, book_name, 
      evaluate, dr)
    values (#{id,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{bookid,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, 
      #{evaluate,jdbcType=VARCHAR}, #{dr,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bookHouse.domain.Evaluation" >
    insert into evaluation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="bookid != null" >
        bookid,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="evaluate != null" >
        evaluate,
      </if>
      <if test="dr != null" >
        dr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookid != null" >
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="evaluate != null" >
        #{evaluate,jdbcType=VARCHAR},
      </if>
      <if test="dr != null" >
        #{dr,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bookHouse.domain.Evaluation" >
    update evaluation
    <set >
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookid != null" >
        bookid = #{bookid,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="evaluate != null" >
        evaluate = #{evaluate,jdbcType=VARCHAR},
      </if>
      <if test="dr != null" >
        dr = #{dr,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bookHouse.domain.Evaluation" >
    update evaluation
    set level = #{level,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      bookid = #{bookid,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      book_name = #{bookName,jdbcType=VARCHAR},
      evaluate = #{evaluate,jdbcType=VARCHAR},
      dr = #{dr,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByBookId" resultMap="BaseResultMap">
    select * from evaluation where bookid=${id}
  </select>

  <select id="selectByConditionWithPage" resultMap="BaseResultMap" >
    select * from  evaluation WHERE
    1=1
      <if test="id != null" >
       AND id=#{id,jdbcType=INTEGER}
      </if>
      <if test="level != null" >
      and  level=#{level,jdbcType=INTEGER}
      </if>
      <if test="userId != null" >
        and user_id=#{userId,jdbcType=INTEGER}
      </if>
      <if test="bookid != null" >
        and bookid=#{bookid,jdbcType=INTEGER}
      </if>
      <if test="userName != null" >
        and user_name=#{userName,jdbcType=VARCHAR}
      </if>
      <if test="bookName != null" >
        and book_name=#{bookName,jdbcType=VARCHAR}
      </if>
      <if test="evaluate != null" >
        and evaluate= #{evaluate,jdbcType=VARCHAR}
      </if>
      <if test="dr != null" >
        and  #{dr,jdbcType=INTEGER},
      </if>
    limit #{start},#{limit}
  </select>
 <update id="logicalDeleteByCondition">
   update Evaluation set dr=1 where 1=1
   <if test="userId != null" >
     and user_id=#{userId,jdbcType=INTEGER}
   </if>
   and dr=0
 </update>


</mapper>