<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookHouse.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.bookHouse.domain.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="forzen_time" jdbcType="TIMESTAMP" property="forzenTime" />
    <result column="ts" jdbcType="TIMESTAMP" property="ts" />
    <result column="image_address" jdbcType="VARCHAR" property="imageAddress" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, password, email, phone, create_time, status, forzen_time, ts, image_address
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bookHouse.domain.User">
    insert into user (id, name, password, 
      email, phone, create_time, 
      status, forzen_time, ts, 
      image_address)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{forzenTime,jdbcType=TIMESTAMP}, #{ts,jdbcType=TIMESTAMP}, 
      #{imageAddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bookHouse.domain.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="forzenTime != null">
        forzen_time,
      </if>
      <if test="ts != null">
        ts,
      </if>
      <if test="imageAddress != null">
        image_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="forzenTime != null">
        #{forzenTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ts != null">
        #{ts,jdbcType=TIMESTAMP},
      </if>
      <if test="imageAddress != null">
        #{imageAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bookHouse.domain.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="forzenTime != null">
        forzen_time = #{forzenTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ts != null">
        ts = #{ts,jdbcType=TIMESTAMP},
      </if>
      <if test="imageAddress != null">
        image_address = #{imageAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bookHouse.domain.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      forzen_time = #{forzenTime,jdbcType=TIMESTAMP},
      ts = #{ts,jdbcType=TIMESTAMP},
      image_address = #{imageAddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByCondition" parameterType="com.bookHouse.domain.User" resultType="com.bookHouse.domain.User">
    SELECT  * from user
    <where>
      1=1
    <if test="name != null">
      and name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="password != null">
      and password = #{password,jdbcType=VARCHAR}
    </if>
    <if test="email != null">
      and email = #{email,jdbcType=VARCHAR}
    </if>
    <if test="phone != null">
     and  phone = #{phone,jdbcType=VARCHAR}
    </if>
    <if test="createTime != null">
     and  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="status != null">
     and  status = #{status,jdbcType=VARCHAR}
    </if>
    <if test="forzenTime != null">
     and  forzen_time = #{forzenTime,jdbcType=TIMESTAMP}
    </if>
    </where>
  </select>
  <select id="selectByKeywordWithPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from user where 1=1
    <if test="keyword != null">
      and name like concat('%',#{keyword},'%')
    </if>
    <if test="start !=null and limit !=null ">
      limit #{start},#{limit}
    </if>

  </select>

  <select id="countByCondition" resultType="Integer">
    SELECT  count(*) from user
    <where>
      1=1
      <if test="name != null">
        and name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="password != null">
        and password = #{password,jdbcType=VARCHAR}
      </if>
      <if test="email != null">
        and email = #{email,jdbcType=VARCHAR}
      </if>
      <if test="phone != null">
        and  phone = #{phone,jdbcType=VARCHAR}
      </if>
      <if test="createTime != null">
        and  create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="status != null">
        and  status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="forzenTime != null">
        and  forzen_time = #{forzenTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
</mapper>